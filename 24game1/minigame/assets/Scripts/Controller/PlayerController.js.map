{"version":3,"sources":["__temp/buildProcess/inlineFunctionProcess/Scripts/Controller/PlayerController.ts"],"names":[],"mappings":";;;AAAA,iCAA4B;AAE5B,gDAA2C;AAI3C,IAAM,OAAO,GAAG,GAAG,CAAC;AACpB,IAAM,EAAE,GAAG,gBAAM,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAErD,IAAM,IAAI,GAAG;IACT,SAAS,EAAE,CAAC;IACZ,SAAS,EAAE,CAAC;CACf,CAAC;AAGF;IAA8C,4CAAa;IAA3D;QAAA,qEAqDC;QA/CU,WAAK,GAAW,gBAAM,CAAC,WAAW,CAAC;QAGnC,eAAS,GAAmB,gBAAM,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QAExD,gBAAU,GAAsB,IAAI,gBAAM,CAAC,UAAU,EAAE,CAAC;QACxD,mBAAa,GAAsB,IAAI,gBAAM,CAAC,UAAU,EAAE,CAAC;QAC3D,sBAAgB,GAAW,CAAC,CAAC;QAI5B,eAAS,GAAW,IAAI,CAAC,SAAS,CAAC;;IAoC/C,CAAC;IAjCU,kCAAO,GAAd;QACI,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,YAAY,CAA6B,gBAAM,CAAC,mBAAmB,CAAC,CAAC;QACrG,IAAI,CAAC,mBAAmB,CAAC,MAAM,GAAG,gBAAM,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;IAClF,CAAC;IAEM,wCAAa,GAApB,UAAqB,IAAW,EAAC,IAAW,EAAC,EAAS,EAAC,MAAsB;QACzE,IAAI,OAAO,GAAG,gBAAM,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;QAC7D,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,GAAC,EAAE,CAAC,CAAC,CAAC;IAG7C,CAAC;IAEM,wCAAa,GAApB,UAAqB,EAAS,EAAC,MAAsB;QAEjD,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,GAAC,EAAE,CAAC,CAAC,CAAC;IAEpE,CAAC;IAEM,0CAAe,GAAtB,UAAuB,IAAW,EAAC,IAAW,EAAC,EAAS,EAAC,MAAsB;QAC3E,IAAI,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACxC,IAAI,SAAS,GAAG,IAAI,CAAC,EAAE,GAAC,IAAI,CAAC,EAAE,GAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC/C,MAAM,CAAC,GAAG,CAAC,gBAAM,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,EAAC,UAAU,GAAE,SAAS,GAAG,EAAE,EAAC,CAAC,CAAC,CAAC,CAAC;QAE5E,OAAO,SAAS,CAAC;IACrB,CAAC;IAGO,kCAAO,GAAd,UAAe,QAAe,EAAC,MAAsB;QACjD,MAAM,CAAC,GAAG,CAAC,gBAAM,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,EAAC,QAAQ,GAAC,EAAE,EAAC,CAAC,CAAC,CAAC,CAAC;IAElE,CAAC;IAlDgB,gBAAgB;QADpC,gBAAM,CAAC,UAAU,CAAC,SAAS,CAAC,YAAY,CAAC;OACrB,gBAAgB,CAqDpC;IAAD,uBAAC;CArDD,AAqDC,CArD6C,gBAAM,CAAC,MAAM,GAqD1D;kBArDoB,gBAAgB","file":"PlayerController.js","sourcesContent":["import engine from \"engine\";\nimport EventManager from \"../event/EventManager\"\nimport config from \"../multiPlayer/config\";\nimport PawnController from \"./PawnController\";\n\n\nconst GRAVITY = 9.8;\nconst UP = engine.Vector3.createFromArray([0, 0, 1]);\n\nconst VIEW = {\n    FIRSTVIEW: 0,\n    THIRDVIEW: 1\n};\n\n@engine.decorators.serialize(\"PlayerCtrl\")\nexport default class PlayerController extends engine.Script {\n\n\n     //控制该对象的移动旋转\n    public bind_entity:engine.Entity;\n\n    public speed: number = config.playerSpeed;\n\n\n    public rotateVec: engine.Vector3 = engine.Vector3.ZERO.clone();\n\n    public rotateQuat: engine.Quaternion = new engine.Quaternion();\n    public curQuaternion: engine.Quaternion = new engine.Quaternion();\n    public rotateAccumulate: number = 0;\n\n    public rotation:number;\n    public characterController: null | engine.CharacterController;\n    private _viewMode: number = VIEW.THIRDVIEW;\n\n\n    public onAwake() {\n        this.characterController = this.getComponent<engine.CharacterController>(engine.CharacterController);\n        this.characterController.center = engine.Vector3.createFromArray([0, 0.5, 0]);\n    }\n\n    public update1stMove(dirX:number,dirY:number,dt:number,dstMov?:engine.Vector3) {\n        let moveDir = engine.Vector3.createFromNumber(dirX, 0, dirY);\n        dstMov.set(moveDir.scale(this.speed*dt));\n        //simpleMove的是世界坐标\n        //this.characterController.simpleMove(moveDir.scale(this.speed));\n    }\n\n    public update3rdMove(dt:number,dstMov?:engine.Vector3) {\n        // 移动动画,forward指向-z方向\n        dstMov.set(this.entity.transform.forward.scale(-this.speed*dt));\n        //this.characterController.simpleMove(this.entity.transform.forward.scale(-this.speed));\n    }\n\n    public update3rdRotate(dirX:number,dirY:number,dt:number,dstRot?:engine.Vector3):number{\n        let turnAmount = Math.atan2(dirX, dirY);\n        let turnSpeed = Math.PI+Math.PI*Math.abs(dirY);\n        dstRot.set(engine.Vector3.createFromNumber(0,turnAmount* turnSpeed * dt,0));\n        //this.entity.transform.rotate(engine.Vector3.createFromNumber(0, turnAmount* turnSpeed * dt, 0),true,false);\n        return turnSpeed;\n    }\n\n     //控制bind_entity在Y轴上的旋转\n     public rotateY(rotation:number,dstRot?:engine.Vector3){\n         dstRot.set(engine.Vector3.createFromNumber(0,rotation/50,0));\n        //this.entity.transform.rotate(engine.Vector3.createFromNumber(0, rotation/50, 0));\n    }\n\n\n}"]}
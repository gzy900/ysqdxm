{"version":3,"sources":["__temp/buildProcess/inlineFunctionProcess/resource/loadBedroom.ts"],"names":[],"mappings":";;;AAAA,+EAAyE;AAEzE,iCAA4B;AAG5B;IAAyC,uCAAa;IAAtD;QAAA,qEAgEC;QAjDQ,aAAO,GAAW,CAAC,CAAA;QAEnB,mBAAa,GAAY,KAAK,CAAA;;IA+CvC,CAAC;IA5Cc,6BAAO,GAApB;;;gBACE,IAAI,CAAC,WAAW,EAAE,CAAA;;;;KACnB;IAEM,iCAAW,GAAlB;QAAA,iBAeC;QAdC,gBAAM,CAAC,MAAM,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,UAAC,WAAW;YACvE,IAAM,UAAU,GAAG,gBAAM,CAAC,MAAM,CAAC,IAAI,CAAC,wCAAwC,CAAC,CAAA;YAE/E,KAAI,CAAC,EAAE,GAAG,UAAU,CAAA;YAEpB,KAAI,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,UAAC,YAAY;gBAChC,gBAAM,CAAC,IAAI,CAAC,SAAS,CAAC,YAA4B,CAAC,CAAA;gBACnD,gBAAM,CAAC,IAAI,CAAC,SAAS,CAAC,WAA2B,CAAC,CAAA;YACpD,CAAC,EAAE,UAAC,CAAC;gBACH,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;YACf,CAAC,CAAC,CAAA;QACJ,CAAC,EAAE,UAAC,CAAC;YACH,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;QACf,CAAC,CAAC,CAAA;IACJ,CAAC;IAEM,2BAAK,GAAZ,UAAa,CAAC;QACZ,IAAI,IAAI,CAAC,QAAQ,EAAE;YAChB,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAA;SAC7B;QACD,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,YAAY,CAAiB,gBAAM,CAAC,OAAO,CAAC,CAAA;YACvF,IAAI,SAAS,EAAE;gBACb,SAAS,CAAC,IAAI,GAAG,CAAC,CAAC,OAAO,CAAA;aAC3B;SACF;IACH,CAAC;IAEM,8BAAQ,GAAf,UAAgB,EAAE;QAChB,IAAI,IAAI,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YAClC,IAAM,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAA;YAC1B,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,KAAK,CAAA;YAClC,IAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAgB,uBAAa,CAAC,CAAA;YACtE,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAA;SAC7B;IACH,CAAC;IACM,+BAAS,GAAhB;IAEA,CAAC;IA1DD;QAHC,gBAAM,CAAC,UAAU,CAAC,QAAQ,CAAC;YAC1B,IAAI,EAAE,gBAAM,CAAC,WAAW;SACzB,CAAC;iDACiC;IAKnC;QAHC,gBAAM,CAAC,UAAU,CAAC,QAAQ,CAAC;YAC1B,IAAI,EAAE,gBAAM,CAAC,WAAW;SACzB,CAAC;qDACqC;IAKvC;QAHC,gBAAM,CAAC,UAAU,CAAC,QAAQ,CAAC;YAC1B,IAAI,EAAE,gBAAM,CAAC,SAAS,CAAC,MAAM;SAC9B,CAAC;gDACwB;IAfP,WAAW;QAD/B,gBAAM,CAAC,UAAU,CAAC,SAAS,CAAC,aAAa,CAAC;OACtB,WAAW,CAgE/B;IAAD,kBAAC;CAhED,AAgEC,CAhEwC,gBAAM,CAAC,MAAM,GAgErD;kBAhEoB,WAAW","file":"loadBedroom.js","sourcesContent":["import UIProgressBar from '../ui/uikit_progressbar/scripts/UIProgressBar'\nimport LoadTask from '!!Only Export Engine Module, Cant Use Internal Moduleï¼šengine/assets/load-task';\nimport engine from \"engine\";\n\n@engine.decorators.serialize(\"loadBedroom\")\nexport default class loadBedroom extends engine.Script {\n\n  @engine.decorators.property({\n    type: engine.Transform2D\n  })\n  public retryBtn: engine.Transform2D\n\n  @engine.decorators.property({\n    type: engine.Transform2D\n  })\n  public errorMessage: engine.Transform2D\n\n  @engine.decorators.property({\n    type: engine.TypeNames.String\n  })\n  public percent: number = 0\n\n  public finishLoading: boolean = false\n  public lt: LoadTask<unknown> | undefined\n  \n  public async onAwake() {\n    this.loadBedRoom()\n  }\n\n  public loadBedRoom() {\n    engine.loader.load('Assets/Scene/Game2D.scene').promise.then((Game2DScene) => {\n      const loaderTask = engine.loader.load('Assets/Resources/bedroom/bedroom.scene')\n\n      this.lt = loaderTask\n\n      this.lt.promise.then((bedRoomScene) => {\n        engine.game.playScene(bedRoomScene as engine.Scene)\n        engine.game.playScene(Game2DScene as engine.Scene)\n      }, (e) => {\n        this.retry(e)\n      })\n    }, (e) => {\n      this.retry(e)\n    })\n  }\n\n  public retry(e) {\n    if (this.retryBtn) {\n       this.retryBtn.active = true\n    }\n    if (this.errorMessage) {\n      const labelComp = this.errorMessage.entity.getComponent<engine.UILabel>(engine.UILabel)\n      if (labelComp) {\n        labelComp.text = e.message\n      }\n    }\n  }\n\n  public onUpdate(dt) {\n    if (this.lt && !this.finishLoading) {\n      const p = this.lt.progress\n      this.percent = p.current / p.total\n      const barComp = this.entity.getComponent<UIProgressBar>(UIProgressBar)\n      barComp.value = this.percent\n    }\n  }\n  public onDestroy() {\n\n  }\n}\n"]}